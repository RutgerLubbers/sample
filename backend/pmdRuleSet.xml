<?xml version="1.0" encoding="UTF-8"?>
<ruleset xmlns="http://pmd.sourceforge.net/ruleset/2.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         name="pmd-eclipse"
         xsi:schemaLocation="http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd">
  <description>
    Opiniated rule set, first version created by Richard and Paul
  </description>

<!--based on https://pmd.github.io/pmd-5.5.1/pmd-java/rules/index.html-->
  <rule ref="rulesets/java/basic.xml"/>
  <rule ref="rulesets/java/braces.xml"/>
  <rule ref="rulesets/java/clone.xml"/>
  <rule ref="rulesets/java/codesize.xml"/>
  <rule ref="rulesets/java/comments.xml">
    <!--we think package-private is a valid access level-->
    <exclude name="CommentDefaultAccessModifier"/>
    <!--we think comment size is of no added value, if we need to add more documentation, than that is what it is -->
    <exclude name="CommentSize"/>
  </rule>
  <rule ref="rulesets/java/controversial.xml">
    <!--we do not agree with this rule, sometimes it improves readability-->
    <exclude name="OnlyOneReturn"/>
    <!--useless rule, implicit constructor is often good enough-->
    <exclude name="AtLeastOneConstructor"/>
    <!--we assume people at QNH using volatile know exactly what to do-->
    <exclude name="AvoidUsingVolatile"/>
    <!--we think package-private is a valid access level-->
    <exclude name="DefaultPackage"/>
    <!--we think PMD reports too many false positives-->
    <exclude name="DataflowAnomalyAnalysis"/>
  </rule>


  <rule ref="rulesets/java/coupling.xml">
    <!-- Exclude LoosePackageCoupling since we have no reasonable configuration -->
    <exclude name="LoosePackageCoupling"/>
  </rule>

  <rule ref="rulesets/java/coupling.xml/LawOfDemeter">
    <properties>
      <property name="violationSuppressXPath" value="//Expression//*//Name[starts-with(@Image, 'ResponseEntity') or starts-with(@Image, 'Stream')]" />
    </properties>
  </rule>

  <rule ref="rulesets/java/coupling.xml/ExcessiveImports">
    <properties>
      <!--What to do with this one??-->
      <property name="minimum" value="50"/>
    </properties>
  </rule>

  <rule ref="rulesets/java/design.xml">
    <!--we do not agree with this rule, sometimes it improves readability-->
    <exclude name="UseUtilityClass"/>
  </rule>
  <rule ref="rulesets/java/empty.xml"/>
  <rule ref="rulesets/java/empty.xml/EmptyCatchBlock">
    <properties>
      <!-- In some cases we need to ignore the exception. If propertly commented
           this is ok.-->
      <property name="allowCommentedBlocks" value="true"/>
    </properties>
  </rule>
  <rule ref="rulesets/java/finalizers.xml"/>
  <rule ref="rulesets/java/imports.xml"/>
  <rule ref="rulesets/java/imports.xml/TooManyStaticImports">
    <properties>
      <!-- we decided to import all depencencies explicitely, including static imports.-->
      <property name="maximumStaticImports" value="20"/>
    </properties>
  </rule>
  <rule ref="rulesets/java/javabeans.xml">
    <exclude name="BeanMembersShouldSerialize"/>
  </rule>
  <rule ref="rulesets/java/junit.xml"/>
  <rule ref="rulesets/java/logging-java.xml">
    <!--this rule is excluded, since it results in NPE
    Known PMD bug, see https://sourceforge.net/p/pmd/bugs/1509/#2a3f
    Will be fixed in PMB 5.5.2-->
    <!--this rule is excluded, since it results in NPE-->
    <exclude name="InvalidSlf4jMessageFormat"/>
  </rule>
  <rule ref="rulesets/java/migrating.xml"/>
  <rule ref="rulesets/java/naming.xml" />
  <rule ref="rulesets/java/naming.xml/LongVariable">
    <properties>
      <property name="minimum" value="30"/>
    </properties>
  </rule>
  <rule ref="rulesets/java/naming.xml/ShortVariable">
    <properties>
      <property name="xpath">
        <value>
          //VariableDeclaratorId[(string-length(@Image) &lt; 3) and (not (@Image='id'))]
          [not(ancestor::ForInit)]
          [not((ancestor::FormalParameter) and (ancestor::TryStatement))]
        </value>
      </property>
    </properties>
  </rule>
  <rule ref="rulesets/java/optimizations.xml">
    <!--startsWith improves readability-->
    <exclude name="SimplifyStartsWith"/>
    <exclude name="UseStringBufferForStringAppends"/>
    <exclude name="RedundantFieldInitializer"/>
  </rule>
  <rule ref="rulesets/java/strictexception.xml"/>
  <rule ref="rulesets/java/strings.xml"/>
  <rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
    <properties>
      <property name="skipAnnotations" value="true"/>
    </properties>
  </rule>
  <rule ref="rulesets/java/sunsecure.xml"/>
  <rule ref="rulesets/java/typeresolution.xml"/>
  <rule ref="rulesets/java/unnecessary.xml"/>
  <rule ref="rulesets/java/unusedcode.xml"/>



  <!-- Now we'll customize a rule's property value -->
  <!--<rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">-->
    <!--<properties>-->
      <!--<property name="reportLevel" value="5"/>-->
    <!--</properties>-->
  <!--</rule>-->

</ruleset>
